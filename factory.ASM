DATA_SEG	SEGMENT	'DATA'
	PROMPT	DB 'Enter a number n:','$'
	ERR	DB 'Too large number.','$'	
	ANS	DB 36 DUP(0)
	TEN	DB 10
DATA_SEG	ENDS


CODE_SEG	SEGMENT	'CODE'
	ASSUME	CS:CODE_SEG,DS:DATA_SEG
	
	MAIN	PROC 	FAR
		MOV AX,DATA_SEG
		MOV DS,AX		;设置DS寄存器
		
		MOV BX,0
	SCANF:	MOV AH,01H		;读入待计算的N值
		INT 21H
		CMP AL,13
		JE  JUDGE
		SUB AL,30H
		MOV CL,AL
		MOV AL,10
		MUL BL
		MOV BL,AL
		ADD BL,CL
		JMP SCANF
		
	JUDGE:	CMP BL,0		;判断N的大小
		JE  OUT_1
		CMP BL,1
		JE  OUT_1
		CMP BL,30
		JA  ERROR
		
		MOV BYTE PTR ANS[0],1	;高精计算
		MOV CX,0	
		MOV SI,-1
	L_BIT:	ADD SI,1
		CMP CX,0
		JA  CARRY
		MOV AL,ANS[SI]
		MUL BL
		MOV ANS[SI],AL
	RET1:	CMP AL,10
		JAE ADJUST
	RET2:	CMP SI,35
		JB  L_BIT
		CMP BL,2
		JBE OUTPUT
		MOV SI,-1
		SUB BX,1
		JMP L_BIT
		
		
		
	CARRY:	MOV AL,ANS[SI]		;处理进位非0的情况
		MUL BL
		ADD AL,CL
		MOV CL,0
		MOV ANS[SI],AL	
		JMP RET1	
	
	ADJUST:	MOV AH,0		;结果大于9的调整
		MOV AL,ANS[SI]
		DIV BYTE PTR TEN
		MOV ANS[SI],AH
		MOV CL,AL
		JMP RET2


	OUTPUT:	MOV SI,36		;输出计算结果
	SKIP:	SUB SI,1
		CMP BYTE PTR ANS[SI],0
		JE  SKIP
	RESULT:	MOV DL,ANS[SI]
		ADD DL,30H
		MOV AH,06H
		INT 21H	
		CMP SI,0
		JE  PRINTNL
		SUB SI,1
		JMP RESULT
		
PRINTNL:	MOV DL,0AH		;输出换行
		MOV AH,06H
		INT 21H
		JMP EXIT	


	OUT_1: 	MOV DL,31H		;若N=0或N=1直接输出1
		MOV AH,06H
		INT 21H
		JMP EXIT

	ERROR : MOV DX,OFFSET ERR	;N>30输出错误信息
		MOV AH,9
		INT 21H
		JMP EXIT
		

	EXIT:	MOV	AH,4CH		
		INT 	21H		;返回DOS提示符

	MAIN	ENDP

CODE_SEG	ENDS
		END	MAIN