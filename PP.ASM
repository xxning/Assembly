DATA_SEG	SEGMENT	'DATA'
		PROMPT	DB	'Please input numbers(-128-127): $' 
		INFO	DB	'There are less than 2 numbers',13,10,'$'
		INFO2	DB	'Please enter any key to exit.',10,13,'$'
		BUFF	DB	256 DUP(0)
		SEQ1	DW	0
		SEQ2	DW	0
		TEN	DW	10
		SIXTEEN DB	16
DATA_SEG	ENDS
STACK_SEG   SEGMENT	'STACK'	
    		DW 	64 DUP(0)
STACK_SEG 	ENDS
CODE_SEG	SEGMENT	'CODE'
	ASSUME	CS:CODE_SEG,SS:STACK_SEG,DS:DATA_SEG
;*******************************************************************
	MAIN	PROC 	FAR
		MOV AX,DATA_SEG
		MOV DS,AX		;设置DS寄存器

		MOV DX,OFFSET PROMPT	;输出提示信息
		MOV AH,09H
		INT 21H

		MOV CL,0		;正负标记
		MOV SI,0		;BUFF指针
		MOV BL,0
	SCANF:	MOV AH,01H		;读入数字
		INT 21H
		CMP AL,13		;回车换行
		JE  STORE
		CMP AL,','		;,
		JE  STORE
		CMP AL,'-'		;-
		JE  NEG_FLAG
		SUB AL,30H		;数字
		MOV CH,AL
		MOV AL,10
		MUL BL
		MOV BL,AL
		ADD BL,CH
		JMP SCANF


	NEG_FLAG:
		MOV CL,1
		JMP SCANF

	STORE:	CMP CL,0
		JA  NEGE
		JMP ST1
	NEGE:	MOV CL,0
		SUB CL,BL
		MOV BL,CL
	ST1:	MOV BUFF[SI],BL
		ADD SI,1
		MOV CL,0
		MOV BL,0
		CMP AL,13
		JE  NEXT
		JMP SCANF

	NEXT:	MOV DI,SI
	N1:	SUB SI,1
		CMP SI,0
		JL  MAX
		MOV BL,BUFF[SI]
		CMP BL,0
		JL  NEGNUM
	N2:	MOV AL,BL
		MOV AH,0
		DIV BYTE PTR SIXTEEN
		JMP OUTPUT

	NEGNUM:	MOV DL,'-'
		MOV AH,06H
		INT 21H
		MOV CL,0
		SUB CL,BL
		MOV BL,CL
		JMP N2

	OUTPUT: MOV DL,AL
		CMP DL,10
		JAE OUTC1
		ADD DL,30H
		PUSH AX
		MOV AH,06H
		INT 21H
		POP AX
	OU1:	MOV DL,AH
		CMP DL,10
		JAE OUTC2
		ADD DL,30H
		MOV AH,06H
		INT 21H
	OU2:	MOV DL,','
		MOV AH,06H
		INT 21H
		JMP N1 

	OUTC1:	ADD DL,30H
		ADD DL,7
		MOV AH,06H
		INT 21H
		JMP OU1

	OUTC2:	ADD DL,30H
		ADD DL,7
		MOV AH,06H
		INT 21H
		JMP OU2
		
	MAX:	MOV SI,DI
		SUB SI,1
		MOV BL,BUFF[SI]			;BL保存最大值
	M1:	SUB SI,1
		CMP SI,0
		JL  OUTMAX
		MOV CL,BUFF[SI]
		CMP BL,CL
		JL  CHANGE
		JMP M1

	CHANGE:	MOV BL,CL
		JMP M1

	
	OUTMAX: MOV DL,0AH
		MOV AH,06H
		INT 21H
		CMP BL,0
		JL  OUT_
	LL1:	MOV CX,'#'
		PUSH CX
		MOV BH,0
		MOV AX,BX
	LL:	MOV DX,0
		DIV WORD PTR TEN
		PUSH DX
		CMP AX,0
		JE  PRINT
		JMP LL

	OUT_:	MOV DL,'-'
		MOV AH,06H
		INT 21H
		MOV CL,0
		SUB CL,BL
		MOV BL,CL
		JMP LL1

	PRINT:	POP AX
		CMP AX,'#'
		JE  NL
		MOV DX,AX
		ADD DX,48
		MOV AH,06H
		INT 21H
		JMP PRINT

	
	NL:	MOV DL,0AH
		MOV AH,06H
		INT 21H
		JMP MINSUM

	MINSUM:	CMP DI,1
		JBE LESS2
		CMP DI,2
		JE  OUT12
		MOV CX,DI		;CX存放N
		MOV AX,0
		MOV BX,0
		MOV AL,BUFF[0]
		MOV BL,BUFF[1]
		;CMP AL,0
		;JL  AADJ1
	READJ1:	;CMP BL,0
		;JMP AADJ2
	READJ2:	ADD BX,AX		
		MOV DX,BX		;存放最小和
		MOV SI,0
		MOV SEQ1,SI
		ADD SI,1
		MOV SEQ2,SI

		MOV SI,-1
	LLL1:	ADD SI,1
		CMP SI,CX
		JE  OUTSEQ
		MOV AX,0
		MOV AL,BUFF[SI]
		;CMP AL,0
		;JL  ADJ1
	RR:	MOV DI,SI
	LLL2:	ADD DI,1
		CMP DI,CX
		JE  LLL1
		MOV BX,0
		MOV BL,BUFF[DI]
		;CMP BL,0
		;JL  ADJ2	
	RR1:	ADD BX,AX
		CMP BX,DX
		JL  ADJUST
		JMP LLL2
	
	AADJ1:	MOV AH,0FFH
		JMP READJ1

	AADJ2:	MOV BH,0FFH
		JMP READJ2

	ADJ1:	MOV AH,0FFH
		JMP RR

	ADJ2:	MOV BH,0FFH
		JMP RR1
	
	ADJUST:	MOV DX,BX
		MOV SEQ1,SI
		MOV SEQ2,DI
		JMP LLL2

	OUTSEQ:	MOV DL,0AH
		MOV AH,06H
		INT 21H
		MOV BX,SEQ1
	S1:	MOV CX,'#'
		PUSH CX
		MOV AX,BX
	S2:	MOV DX,0
		DIV WORD PTR TEN
		PUSH DX
		CMP AX,0
		JE  PRINTSEQ1
		JMP S2
	S3:	MOV DL,','
		MOV AH,06H
		INT 21H
		MOV BX,SEQ2
	S4:	MOV CX,'#'
		PUSH CX
		MOV AX,BX
	S5:	MOV DX,0
		DIV WORD PTR TEN
		PUSH DX
		CMP AX,0
		JE  PRINTSEQ2
		JMP S4

	PRINTSEQ1:
		POP AX
		CMP AX,'#'
		JE  S3
		MOV DX,AX
		ADD DX,48
		MOV AH,06H
		INT 21H
		JMP PRINTSEQ1

	PRINTSEQ2:
		POP AX
		CMP AX,'#'
		JE  NL2
		MOV DX,AX
		ADD DX,48
		MOV AH,06H
		INT 21H
		JMP PRINTSEQ2
				
	NL2:	MOV DL,0AH
		MOV AH,06H
		INT 21H
		JMP EXIT



	LESS2:	MOV DX,OFFSET INFO
		MOV AH,9
		INT 21H
		MOV DL,0AH
		MOV AH,06H
		INT 21H
		JMP EXIT
		

	OUT12:	MOV DL,30H
		MOV AH,06H
		INT 21H
		MOV DL,','
		INT 21H
		MOV DL,31H
		INT 21H
		MOV DL,0AH
		INT 21H
		JMP EXIT
			
	
	EXIT:	MOV DX,OFFSET INFO2
		MOV AH,9
		INT 21H
		MOV AH,01H
		INT 21H
		MOV AH,4CH		
		INT 21H		;返回DOS提示符

	MAIN	ENDP
;*******************************************************************


;*******************************************************************

CODE_SEG	ENDS
		END	MAIN
