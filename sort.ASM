DATA_SEG	SEGMENT	'DATA'
	FILE	DB '2.TXT',0 		;输入文件名
	OUTFILE	DB 'OUTPUT.TXT',0	;输出文件名
	CODE1	DW 0
	CODE2	DW 0
	BUF	DB 0
	BUFF	DW 1024 DUP(0)		;缓冲区
	OPEN_ERROR DB 0AH,'OPEN ERROR!','$'
	READ_ERROR DB 0AH,'READ ERROR!','$'
	ERROR	DB 0AH,'INPUT ERROR!','$'
	TEN1	DW 10
	TEN2	DW 100
	TEN3	DW 1000
	TEN4	DW 10000
	SAVEBX  DW 0
	SAVECX  DW 0
	SAVEDX  DW 0
DATA_SEG	ENDS


CODE_SEG	SEGMENT	'CODE'
	ASSUME	CS:CODE_SEG,DS:DATA_SEG

	MAIN	PROC	FAR
		MOV AX,DATA_SEG
		MOV DS,AX		;设置DS寄存器
		MOV DX,OFFSET FILE
		MOV AL,0
		MOV AH,3DH		;打开输入文件
		INT 21H
		JC  ERROR_OPEN
		MOV CODE1,AX
		MOV DX,OFFSET OUTFILE
		MOV CX,0
		MOV AH,3CH		;创建输出文件
		INT 21H
		JC  ERROR_OPEN
		MOV CODE2,AX

		MOV DI,0		;记录数字的个数
		MOV SI,0		;保存从ASCII转换出的数字值
	SCANF:	MOV BX,CODE1
		MOV CX,1
		MOV DX,OFFSET BUF
		MOV AH,3FH		;读文件
		INT 21H			;一次读入一个字符		
		MOV BL,BUF
		CMP BL,37
		JE  SORT
		CMP BL,13
		JE  SCANF
		CMP BL,10
		JE  NEXT
		CMP BL,48		;BL>='0'&&BL<='9'
		JB  ERROR_FILE
		CMP BL,57
		JA  ERROR_FILE
		SUB BL,48
		MOV AX,10
		MUL SI
		MOV SI,AX
		MOV BH,0
		ADD SI,BX		;SI=SI*10+BX
		JMP SCANF  

	NEXT:	MOV DX,OFFSET BUFF	
		MOV BX,DI
		ADD BX,DI
		MOV WORD PTR BUFF[BX],SI	;保存数值
		MOV SI,0
		ADD DI,1
		JMP SCANF

	SORT:	ADD DI,DI
		MOV AX,DI
		SUB AX,2
		MOV SI,-2
NEXTROW:	ADD SI,2		;SI，DI为循环变量，实现冒泡排序
		CMP SI,AX
		JE  OUTPUT
		MOV DI,-2
		MOV DI,SI
NEXTCOLUMN:	ADD DI,2
		MOV CX,WORD PTR BUFF[SI]
		MOV DX,WORD PTR BUFF[DI]
		CMP DX,CX
		JB  EXCHANGE
RET2:		CMP DI,AX
		JE  NEXTROW
		JMP NEXTCOLUMN	
 	 	
EXCHANGE:	MOV BX,CX		;交换CX，DX的值，并存回内存单元
		MOV CX,DX
		MOV DX,BX
		MOV WORD PTR BUFF[SI],CX
		MOV WORD PTR BUFF[DI],DX
		JMP RET2
		

	OUTPUT:	MOV DI,AX
		ADD DI,2
		MOV SI,0
		MOV CX,0
	_OUT:	MOV AX,WORD PTR BUFF[SI]
		MOV DX,0
		DIV WORD PTR TEN4
		MOV BX,DX
		MOV DX,AX		
		JMP PRINT4		;万位
	OUT3:	MOV DX,0
		MOV AX,BX
		DIV WORD PTR TEN3
		MOV BX,DX
		MOV DX,AX		
		JMP PRINT3		;千位
	OUT2:	MOV DX,0
		MOV AX,BX
		DIV WORD PTR TEN2
		MOV BX,DX
		MOV DX,AX		
		JMP PRINT2		;百位
	OUT1:	MOV DX,0
		MOV AX,BX
		DIV WORD PTR TEN1
		MOV BX,DX
		MOV DX,AX		
		JMP PRINT1		;十位
	OUT0:	MOV DX,BX
		JMP PRINT0		;个位
		
	RET1:	ADD SI,2
		CMP SI,DI
		JE  EXIT
		JMP _OUT
		
	
	PRINT4:	CMP DL,0		;输出万位
		JE  OUT3
		MOV CX,1
		ADD DL,30H
		MOV AH,06H
		INT 21H
		CALL TOFILE
		JMP OUT3

	PRINT3:	MOV AH,0		;输出千位
		MOV AL,DL
		ADD AX,CX
		CMP AX,1
		JB  OUT2
		MOV CX,1
		ADD DL,30H
		MOV AH,06H
		INT 21H
		CALL TOFILE
		JMP OUT2

	PRINT2:	MOV AH,0		;输出百位
		MOV AL,DL
		ADD AX,CX
		CMP AX,1
		JB  OUT1
		MOV CX,1
		ADD DL,30H
		MOV AH,06H
		INT 21H
		CALL TOFILE
		JMP OUT1

	PRINT1:	MOV AH,0		;输出十位
		MOV AL,DL
		ADD AX,CX
		CMP AX,1
		JB  OUT0
		MOV CX,1
		ADD DL,30H
		MOV AH,06H
		INT 21H
		CALL TOFILE
		JMP OUT0

	PRINT0:	ADD DL,30H		;输出换行
		MOV AH,06H
		INT 21H
		CALL TOFILE
		MOV DL,0AH
        	MOV AH,6
        	INT 21H			;输出换行
		MOV DL,13
		CALL TOFILE
		MOV DL,10
		CALL TOFILE
		MOV CX,0
		JMP RET1


ERROR_OPEN:	MOV DX,OFFSET OPEN_ERROR	;error of open
		MOV AH,9
		INT 21H
		JMP EXIT

ERROR_READ:	MOV DX,OFFSET READ_ERROR	;error of read
		MOV AH,9
		INT 21H
		JMP EXIT

ERROR_FILE:	MOV DX,OFFSET ERROR		;error of file
		MOV AH,9
		INT 21H
		JMP EXIT
		

	EXIT:	MOV	AH,4CH		
		INT 	21H		;返回DOS提示符

	MAIN	ENDP

	TOFILE 	PROC FAR		;用于输出到文件的函数
		MOV BUF,DL
		MOV SAVEBX,BX
		MOV SAVECX,CX
		MOV SAVEDX,DX
		MOV CX,1
		MOV BX,CODE2
		MOV DX,OFFSET BUF
		MOV AH,40H
		INT 21H	
		MOV BX,SAVEBX
		MOV CX,SAVECX
		MOV DX,SAVEDX
		RET
	TOFILE 	ENDP

CODE_SEG	ENDS
		END	MAIN

	